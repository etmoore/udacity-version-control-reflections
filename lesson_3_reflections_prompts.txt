When would you want to use a remote repository rather than keeping all your work local?  
Using a remote repository allows you to have access to your code no matter what computer your're on.
It also allows you to share your code with other developers more easily.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?  
Perhaps someone has pushed code that you don't want merged with your code yet.
You'd never know what the state of the code would be like because it would
be pulling down other developers' code.

Describe the differences between forks, clones, and branches. When would you use
one instead of another?
Branches are for managing feature development. Cloning is for transferring
a repo from one computer to another. Forking is for cloning when you want to
keep a reference to the original repo.

What is the benefit of having a copy of the last known state of the remote
stored locally?
If you'll be working without internet access, you'll still be able to access
the other branches/changes that exist in the remote.

How would you collaborate without using Git or GitHub? What would be easier, and
what would be harder?
Without git and github, I'd have to save files with different names and email
them to my team. It would be a headache. I wouldn't have to learn a new tool,
which would make it easier in some ways, but much less exciting.

When would you want to make changes in a separate branch rather than directly in
master? What benefits does each approach have?
Making changes in a separate branch keeps master clean and allows you to confirm
with whoever made the pull request that the changes are as intended. Making the
changes directly to master would be convenient, but you would lose that
collaborative confirmation you get when you keep the changes in a separate
branch.
